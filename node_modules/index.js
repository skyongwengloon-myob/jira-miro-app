require('dotenv').config();
const express = require('express');
const axios = require('axios');
const app = express();
app.use(express.json());

const { JIRA_EMAIL, JIRA_DOMAIN, JIRA_TOKEN, JIRA_BOARD_ID, MIRO_TOKEN, MIRO_BOARD_ID } = process.env;

app.get('/sync-sprints', async (req, res) => {
  try {
    
    // 1. Get active sprints
  
    const sprints = await axios.get(
      `https://${JIRA_DOMAIN}/rest/agile/1.0/board/${JIRA_BOARD_ID}/sprint?state=active`,
      {
        headers: {
          Authorization: `Basic ${Buffer.from(`${JIRA_EMAIL}:${JIRA_TOKEN}`).toString('base64')}`,
          Accept: 'application/json',
        },
      }
    );
    
    const activeSprints = sprints.data.values;

    for (const sprint of activeSprints) {
      // 2. Get issues for each sprint
      const issuesRes = await axios.get(
        `https://${JIRA_DOMAIN}/rest/agile/1.0/sprint/${sprint.id}/issue`,
        {
          headers: {
            Authorization: `Basic ${Buffer.from(`${JIRA_EMAIL}:${JIRA_TOKEN}`).toString('base64')}`,
            Accept: 'application/json',
          },
        }
      );

      const issues = issuesRes.data.issues;

      // 3. Create Miro sticky notes
      for (const issue of issues) {
        await axios.post(
          `https://api.miro.com/v2/boards/${MIRO_BOARD_ID}/sticky_notes`,
          {
            data: {
              content: `${issue.key}: ${issue.fields.summary}`,
              shape: 'square',
            },
          },
          {
            headers: {
              Authorization: `Bearer ${MIRO_TOKEN}`,
              'Content-Type': 'application/json',
            },
          }
        );
      }
    }

    res.send('Active sprints and issues synced to Miro board.');
  } catch (error) {
    console.error(error.response?.data || error.message);
    res.status(500).send('Something went wrong.');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
